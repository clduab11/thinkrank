{
  "name": "thinkrank",
  "version": "1.0.0",
  "description": "ThinkRank - AI Research Gaming Platform",
  "private": true,
  "workspaces": [
    "backend/services/*",
    "backend/shared/*",
    "frontend"
  ],
  "scripts": {
    "build": "npm run build --workspaces --if-present",
    "build:backend": "npm run build --workspaces --if-present",
    "dev": "concurrently \"npm run dev:auth\" \"npm run dev:game\" \"npm run dev:social\"",
    "dev:backend": "concurrently \"npm run dev --workspace=backend/services/auth-service\" \"npm run dev --workspace=backend/services/game-service\" \"npm run dev --workspace=backend/services/ai-research-service\" \"npm run dev --workspace=backend/services/social-service\" \"npm run dev --workspace=backend/services/analytics-service\" \"npm run dev --workspace=backend/services/api-gateway\"",
    "test": "npm run test --workspaces --if-present",
    "test:integration": "jest --config=backend/tests/jest.integration.config.js",
    "test:performance": "npm run test:performance --workspaces --if-present",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "npm run lint:fix --workspaces --if-present",
    "format": "prettier --write \"**/*.{ts,tsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,json,md}\"",
    "docker:build": "docker-compose -f infrastructure/docker/docker-compose.yml build",
    "docker:up": "docker-compose -f infrastructure/docker/docker-compose.yml up -d",
    "docker:down": "docker-compose -f infrastructure/docker/docker-compose.yml down",
    "k8s:apply": "kubectl apply -k infrastructure/kubernetes/overlays/dev",
    "k8s:delete": "kubectl delete -k infrastructure/kubernetes/overlays/dev",
    "terraform:init": "cd infrastructure/terraform && terraform init",
    "terraform:plan": "cd infrastructure/terraform && terraform plan",
    "terraform:apply": "cd infrastructure/terraform && terraform apply",
    "unity:build:ios": "./client/build-scripts/build-ios.sh",
    "unity:build:android": "./client/build-scripts/build-android.sh",
    "setup": "npm install && npm run build",
    "clean": "npm run clean --workspaces --if-present && rm -rf node_modules",
    "postinstall": "husky install",
    "dev:auth": "npm run dev --workspace=backend/services/auth-service",
    "dev:game": "npm run dev --workspace=backend/services/game-service",
    "dev:social": "npm run dev --workspace=backend/services/social-service",
    "test:auth": "npm test --workspace=backend/services/auth-service",
    "test:game": "npm test --workspace=backend/services/game-service",
    "test:e2e": "jest --config=backend/tests/jest.e2e.config.js",
    "build:production": "NODE_ENV=production npm run build",
    "docker:build:all": "docker-compose -f docker-compose.yml build",
    "health-check": "node scripts/health-check.js",
    "typecheck": "tsc --noEmit",
    "dev:frontend": "cd frontend && npm run dev",
    "test:frontend": "cd frontend && npm test",
    "build:frontend": "cd frontend && npm run build",
    "test:ai": "npm test --workspace=backend/services/ai-service",
    "dev:ai": "npm run dev --workspace=backend/services/ai-service"
  },
  "devDependencies": {
    "@eslint/js": "^9.36.0",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^8.44.1",
    "@typescript-eslint/parser": "^8.44.1",
    "concurrently": "^8.2.2",
    "eslint": "^9.36.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.1.0",
    "prettier": "^3.1.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  },
  "engines": {
    "node": ">=20.10.0",
    "npm": ">=10.2.0"
  },
  "keywords": [
    "ai",
    "research",
    "gaming",
    "unity",
    "mobile",
    "typescript",
    "supabase",
    "aws"
  ],
  "author": "ThinkRank Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/thinkrank/thinkrank.git"
  }
}
