version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: thinkrank
      POSTGRES_PASSWORD: thinkrank_dev
      POSTGRES_DB: thinkrank
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thinkrank"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./backend/services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://thinkrank:thinkrank_dev@postgres:5432/thinkrank
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-${JWT_SECRET}}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/services/auth-service:/app
      - /app/node_modules

  game-service:
    build:
      context: ./backend/services/game-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://thinkrank:thinkrank_dev@postgres:5432/thinkrank
      REDIS_URL: redis://redis:6379
      AI_SERVICE_URL: http://ai-service:3003
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/services/game-service:/app
      - /app/node_modules

  ai-service:
    build:
      context: ./backend/services/ai-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      MODEL_PATH: /app/models
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend/services/ai-service:/app
      - /app/node_modules
      - ai_models:/app/models

  social-service:
    build:
      context: ./backend/services/social-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://thinkrank:thinkrank_dev@postgres:5432/thinkrank
      REDIS_URL: redis://redis:6379
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/services/social-service:/app
      - /app/node_modules

  api-gateway:
    image: kong:3.4-alpine
    ports:
      - "3000:8000"
      - "8001:8001"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    volumes:
      - ./infrastructure/kong:/kong/declarative
    depends_on:
      - auth-service
      - game-service
      - ai-service
      - social-service

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
  ai_models: