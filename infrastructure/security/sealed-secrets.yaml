# Sealed Secrets Configuration for Enhanced Secret Management
apiVersion: v1
kind: Namespace
metadata:
  name: sealed-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sealed-secrets-controller
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["bitnami.com"]
  resources: ["sealedsecrets"]
  verbs: ["get", "list", "watch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sealed-secrets-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sealed-secrets-controller
subjects:
- kind: ServiceAccount
  name: sealed-secrets-controller
  namespace: sealed-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
  labels:
    name: sealed-secrets-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      name: sealed-secrets-controller
  template:
    metadata:
      labels:
        name: sealed-secrets-controller
    spec:
      serviceAccountName: sealed-secrets-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: sealed-secrets-controller
        image: quay.io/bitnami/sealed-secrets-controller:v0.24.0
        command:
        - controller
        args:
        - --key-renew-period=30d
        - --rotate-encryption-keys=true
        - --key-cutoff-time=P30D
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: metrics
        env:
        - name: SEALED_SECRETS_UPDATE_STATUS
          value: "true"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
  labels:
    name: sealed-secrets-controller
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  - port: 8081
    targetPort: 8081
    name: metrics
  selector:
    name: sealed-secrets-controller
---
# SealedSecret for ThinkRank production secrets
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: thinkrank-secrets
  namespace: thinkrank
spec:
  encryptedData:
    DATABASE_PASSWORD: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
    JWT_SECRET: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
    JWT_REFRESH_SECRET: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
    OPENAI_API_KEY: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
    ANTHROPIC_API_KEY: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
    SUPABASE_URL: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
    SUPABASE_ANON_KEY: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
    SUPABASE_SERVICE_KEY: AgBy3i4OJSWK+PiTySYZZA9rO5QtQvEC5gMBxRQ...
  template:
    metadata:
      name: thinkrank-secrets
      namespace: thinkrank
    type: Opaque
---
# External Secrets Operator Configuration
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secrets-manager
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        secretRef:
          accessKeyID:
            name: aws-secret
            key: access-key-id
            namespace: external-secrets
          secretAccessKey:
            name: aws-secret
            key: secret-access-key
            namespace: external-secrets
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: thinkrank-external-secrets
  namespace: thinkrank
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: thinkrank-secrets-external
    creationPolicy: Owner
  data:
  - secretKey: DATABASE_PASSWORD
    remoteRef:
      key: thinkrank/database
      property: password
  - secretKey: JWT_SECRET
    remoteRef:
      key: thinkrank/jwt
      property: secret
  - secretKey: OPENAI_API_KEY
    remoteRef:
      key: thinkrank/openai
      property: api_key
  - secretKey: ANTHROPIC_API_KEY
    remoteRef:
      key: thinkrank/anthropic
      property: api_key